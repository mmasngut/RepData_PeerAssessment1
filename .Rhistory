quantile(img, probs=seq(0,1,0.1))
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileURL, destfile = "./data/getdata.jpg")
img <- readJPEG("./data/getdata.jpg", native=TRUE)
quantile(img, c(0.3,0.8))
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile = "./data/housing.csv")
df <- read.csv("./data/housing.csv")
library(httr)
agricultureLogical <- df$ACR==3 & df$AGS== 6
which(agricultureLogical)[1:3]
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileURL, destfile = "./data/GDP.csv")
fileURL <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileURL, destfile = "./data/edu.csv")
library(data.table)
df.gdp <- data.table(read.csv("./data/GDP.csv", header=TRUE, skip = 4, nrows = 191))
df.edu <- data.table(read.csv("./data/edu.csv", header = TRUE))
data <-merge(df.gdp, df.edu, by.x="X", by.y = "CountryCode", all = FALSE)
data.arrange<-arrange(data, desc(X.1))
countrows(data.arrange)
library(dplyr)
countrows(data.arrange)
library(data.table)
countrows(data.arrange)
head(data.arrange)
count(data.arrange)
data.arrange[13,]
by_incomegrp <- group_by(data, Income.Group)
summarise(by_incomegrp, mean(X.1))
breaks <- quantile(data$X.1, probs = seq(0, 1, 0.2), na.rm = TRUE)
data$quantileGDP <- cut(data$X.1, breaks = breaks)
data[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
if(!file.exists("./data")){dir.create("./data")}
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile = "./data/quiz4.csv")
summarise(df)
head(df)
names(df)
strsplit(names(df),"wgtp")
df_split <- strsplit(names(df),"wgtp")
df_split[[123]]
df.gdp <- data.table(read.csv("./data/GDP.csv", header=TRUE, skip = 4, nrows = 191))
names(df.gdp)
head(df.gdp)
?str_trim
??
?substr
gdp <- sub(",", df.gdp$X.4)
gdp <- sub(",","", df.gdp$X.4)
head(gdp)
gdp <- gsub(",","", df.gdp$X.4)
head(gdp)
mean(gdp)
gdp_num <- as.numeric(gdp)
mean(gdp_num)
gdp_num <- as.numeric(gdp, na.rm=TRUE)
mean(gdp_num)
head(gdp)
head(gdp_num)
gdp_num <- as.numeric(gdp)
mean(gdp_num, as.rm=TRUE)
head(gdp_num)
mean(gdp_num, na.rm=TRUE)
grep("^United",df.gdp$X.3)
count(grep("^United",df.gdp$X.3))
grep("^United",df.gdp$X.3)
grep("^United$",df.gdp$X.3)
grep("^United",df.gdp$X.3)
df.gdp <- data.table(read.csv("./data/GDP.csv", header=TRUE, skip = 4, nrows = 191))
df.edu <- data.table(read.csv("./data/edu.csv", header = TRUE))
data <-merge(df.gdp, df.edu, by.x="X", by.y = "CountryCode", all = FALSE)
library(dplyr)
names(data)
df.gdp <- data.table(read.csv("./data/GDP.csv", header=TRUE, skip = 4, nrows = 191))
df.edu <- data.table(read.csv("./data/edu.csv", header = TRUE))
library(dplyr)
data <-merge(df.gdp, df.edu, by.x="X", by.y = "CountryCode", all = FALSE)
names(data)
head(data)
tail(data)
tail(data)
names(data)
data.june <- grep("Fiscal year end: June 30", data$Special.Notes)
data.june
data.june
count(data.june)
nrows(data.june)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
date2012 <- grep("2012", sampleTimes)
date2012
hari <- weekdays(sampleTimes)
hari
tahun <- sampleTimes("%Y")
tahun <- as.Date(sampleTimes,"%Y")
tahun
?"Date"
?"Dates"
?"date-time"
length(data.june)
?POXICTlt
?`POSIXlt-class`
date2012 <- grep("2012", sampleTimes)
hari <- weekdays(date2012)
hari <- weekdays(as.Date(date2012))
length(date2012)
hari
hari <- grep("Monday", weekdays(as.Date(date2012)))
length(date2012)
length(hari)
hari <- grep("Monday", weekdays(as.Date(date2012)))
length(date2012)
length(hari)
hari
date2012
hari <- grep("Monday", weekdays(as.Date(date2012[[]])))
date2012[]
date2012[[]]
date2012[[1]]
date2012[1]
date2012 <- grep1("2012", sampleTimes)
date2012 <- grepl("2012", sampleTimes)
date2012
hari <- grep("Monday", weekdays(isTRUE(date2012)))
?subset
sampleTimes2012 <- subset(sampleTimes, date2012)
sampleTimes2012
hari <- grep("Monday", weekdays(sampleTimes2012))
hari
length(hari)
length(sampleTimes2012)
install.packages("ggplot2")
library(ggplot2)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color=drv)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"))
qplot(displ, hwy, data = mpg, facets = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
xyplot()
?xyplot
install.packages("lattice")
install.packages("grid")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
qplot(votes, rating, data = movies)
library(datasets)
data(movies)
data(movie)
library(datasets)
?"datasets"
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library(datasets)
data(movies)
?splom
library(ggplot2)
?splom
?par
?trellis
?trellis.par.set
?lpoints
??lpoints
NEI <- readRDS("./data/summarySCC_PM25.rds")
setwd("D:/DataScience/Mod4/Assignment2")
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
setwd("D:/DataScience/Mod5/RepData_PeerAssessment1")
activityData <- read.csv("./data/activity.csv")
head(activityData)
library(dplyr)
meanSteps <- activityData %>% group_by(date) %>% summarise(mean = mean(steps), na.rm=FALSE)
meanSteps
meanSteps <- activityData %>% group_by(date) %>% summarise(mean = mean(steps, na.rm=FALSE))
meanSteps
meanSteps <- activityData %>% group_by(date) %>% summarise(mean = mean(steps, na.rm=TRUE))
meanSteps
meanSteps <- activityData %>% group_by(date) %>% summarise(mean = mean(steps, na.rm=FALSE))
meanSteps <- activityData %>% group_by(date) %>% summarise(mean = mean(steps))
meanSteps
activityData[date=="2012-10-01",]
activityData[activityData$date=="2012-10-01",]
activityData[activityData$date=="2012-10-01" && !is.na(activityData$steps)]
x<-activityData[activityData$date=="2012-10-01" && !is.na(activityData$steps)]
head(x)
x
x
x<-activityData[activityData$date=="2012-10-01" && !is.na(activityData$steps),]
head(x)
x[1,]
meanSteps <- activityData %>% group_by(date) %>% summarise(Total = sum(steps))
sumSteps <- activityData %>% group_by(date) %>% summarise(Total = sum(steps))
sumSteps
meanSteps <- mean(sumSteps)
meanSteps <- mean(sumSteps, na.rm = FALSE)
sumSteps
meanSteps <- mean(sumSteps$Total, na.rm = FALSE)
meanSteps
sumSteps <- activityData %>% group_by(date) %>% summarise(total = sum(steps))
sumSteps
meanSteps <- mean(sumSteps$total, na.rm = FALSE)
meanSteps
meanSteps <- summarise(mean = mean(sumSteps$total))
meanSteps <- summarise(sumSteps, mean = mean(sumSteps$total))
meanSteps
sumSteps <- activityData %>% group_by(date) %>% summarise(total = sum(steps, na.rm=FALSE))
sumSteps
meanSteps <- summarise(sumSteps[!is.na(sumSteps$total),], mean = mean(sumSteps$total))
meanSteps
sumSteps <- activityData[!is.na(activityData$steps),] %>% group_by(date) %>% summarise(total = sum(steps, na.rm=FALSE))
sumSteps
meanSteps <- summarise(sumSteps, mean = mean(sumSteps$total))
meanSteps
library(dplyr)
sumSteps <- activityData[!is.na(activityData$steps),] %>% group_by(date) %>% summarise(total = sum(steps))
sumSteps
meanSteps <- summarise(sumSteps, mean = mean(sumSteps$total))
meanSteps
?hist
hist(sumSteps,xlab = "Date", ylab = "Total number of steps", axes = TRUE)
hist(sumSteps$total,xlab = "Date", ylab = "Total number of steps", axes = TRUE)
hist(activityData)
hist(activityData$steps)
hist(sumSteps$total,xlab = "Date", ylab = "Total number of steps", axes = TRUE)
hist(sumSteps$total, axes = TRUE)
hist(sumSteps$total, axes = TRUE, xlab = "Total number of steps")
hist(sumSteps$total, axes = TRUE, xlab = "Total number of steps each day")
hist(sumSteps$total, axes = TRUE, xlab = "Total steps", main = "HIstogram of total number of steps each day")
meanSteps <- summarise(sumSteps, mean = mean(sumSteps$total))
meanSteps
mean(sumSteps$total)
medSteps <- median(sumSteps$total)
medSteps
head(activityData)
png("./instructions_fig/hist_tot_step.png")
hist(sumSteps$total, axes = TRUE, xlab = "Total steps", main = "Histogram of total number of steps each day")
png("./instructions_fig/histogram_total_steps.png")
hist(sumSteps$total, axes = TRUE, xlab = "Total steps", main = "Histogram of total number of steps each day")
dev.off()
avgSteps <- activityData[!is.na(activityData$steps),] %>% group_by(interval) %>% summarise(average = avg(steps))
avgSteps <- activityData[!is.na(activityData$steps),] %>% group_by(interval) %>% summarise(avg = average(steps))
avgSteps <- activityData[!is.na(activityData$steps),] %>% group_by(interval) %>% summarise(avg = mean(steps))
head(avgSteps)
avgSteps <- activityData[!is.na(activityData$steps),] %>% group_by(interval) %>% summarise(average = mean(steps))
head(avgSteps)
plot(avgSteps$interval, activityData$average, type="l", xlab="", ylab="Average steps")
avgSteps
tail(avgSteps)
plot(avgSteps$average, activityData$interval, type="l", xlab="", ylab="Average steps")
plot(avgSteps$interval, avgSteps$average, type="l", xlab="", ylab="Average steps")
max(avgSteps$average)
maxInterval<- max(avgSteps$average)
maxInterval<- avgSteps[max(avgSteps$average),]
maxInterval
max(avgSteps$average)
maxInterval<- avgSteps[avgSteps$average==max(avgSteps$average),]
maxInterval
totalMissing <- nrow(activityData[is.na(activityData$steps),])
totalMissing
activityData[is.na(activityData$steps),]
imputeActivity <- activityData
head(imputeActivity)
head(avgSteps)
imputeActivity <- activityData
imputeActivity$steps[is.na(imputeActivity$steps)] <- avgSteps$average[avgSteps$interval==imputeActivity$interval]
imputeActivity$steps[is.na(imputeActivity$steps)]
avgSteps$average[avgSteps$interval==imputeActivity$interval]
imputeActivity$steps[is.na(imputeActivity$steps)] <- 1234
head(imputeActivity)
imputeActivity <- activityData
imputeActivity <- activityData
head(imputeActivity)
imputeActivity$steps[is.na(imputeActivity$steps)] <- 1234
head(imputeActivity)
?sapply
imputeActivity <- activityData
head(imputeActivity)
for (i in which(sapply(imputeActivity, is.numeric))) {
imputeActivity[is.na(imputeActivity[, i]), i] <- mean(imputeActivity[, i],  na.rm = TRUE)
}
head(imputeActivity)
imputeActivity <- activityData
head(imputeActivity)
na.steps <- which(is.na(imputeActivity$steps))
na.interval <- imputeActivity$interval[na.steps]
imputeActivity$steps[na.indices] <- avgSteps$average[match(na.interval, avgSteps$interval)]
imputeActivity$steps[is.na(imputeActivity$steps)] <- avgSteps$average[match(na.interval, avgSteps$interval)]
head(imputeActivity)
imputeActivity[imputeActivity$interval==0,]
avgSteps[avgSteps$interval==0,]
avgSteps[avgSteps$interval==5,]
head(imputeActivity)
na.steps <- which(is.na(imputeActivity$steps))
na.interval <- imputeActivity$interval[na.steps]
na.indices <- is.na(imputeActivity$steps)
imputeActivity$steps[na.indices] <- avgSteps$average[match(na.interval, avgSteps$interval)]
head(imputeActivity)
imputeActivity <- activityData
na.steps <- which(is.na(imputeActivity$steps))
na.interval <- imputeActivity$interval[na.steps]
na.indices <- is.na(imputeActivity$steps)
imputeActivity$steps[na.indices] <- avgSteps$average[match(na.interval, avgSteps$interval)]
head(imputeActivity)
nrow(imputeActivity[is.na(imputeActivity$steps),])
sumStepsImpute <- imputeActivity[!is.na(imputeActivity$steps),] %>% group_by(date) %>% summarise(total = sum(steps))
hist(sumStepsImpute$total, axes = TRUE, xlab = "Total steps", main = "Histogram of total number of steps each day")
hist(sumStepsImpute$total, axes = TRUE, xlab = "Total steps (with imputation)", main = "Histogram of total number of steps each day")
meanStepshist(sumSteps$total, axes = TRUE, xlab = "Total steps", main = "Histogram of total number of steps each day")
meanStepsImpute <- mean(sumStepsImpute$total)
meanStepsImpute
medStepsImpute <- median(sumStepsImpute$total)
medStepsImpute
activityImpute <- activityData
head(activityImpute)
na.steps <- which(is.na(activityImpute$steps))
na.interval <- activityImpute$interval[na.steps]
na.indices <- is.na(activityImpute$steps)
activityImpute$steps[na.indices] <- avgSteps$average[match(na.interval, avgSteps$interval)]
sumStepsImpute <- activityImpute[!is.na(activityImpute$steps),] %>% group_by(date) %>% summarise(total = sum(steps))
meanStepsImpute <- mean(sumStepsImpute$total)
medStepsImpute <- median(sumStepsImpute$total)
?weekdays
activityImpute$weekdays <- weekdays(activityImpute$date)
activityImpute$weekday <- weekdays(activityImpute$date)
is.date(activityImpute$date)
is.Date(activityImpute$date)
typeof(activityImpute$date)
as.Date(activityImpute$date)
activityImpute$day <- weekdays(activityImpute$date)
is.factor(activityImpute$date)
levels(activityData$date)
activityData$date2 <- as.character(activityImpute$date)
is.factor(activityImpute$date2)
activityImpute$day <- weekdays(activityImpute$date)
activityImpute$day <- weekdays(activityImpute$date2)
activityData$date2 <- as.Date(activityImpute$date)
activityImpute$day <- weekdays(activityImpute$date2)
is.factor(activityImpute$date2)
as.Date(activityData$date2)
is.factor(activityImpute$date2)
activityImpute$day <- weekdays(activityImpute$date2)
as(activityData$date2, date)
date2 <- as.Date(activityImpute$date)
as(date2, date)
activityImpute$day <- weekdays(date2)
activityImpute$day
head(activityImpute$day)
date2 <- activityImpute$date
as(date2, date)
activityImpute$day <- weekdays(date2)
as(date2, date)
date2 <- activityImpute$date
as(date2, date)
date2 <- as.Date(activityImpute$date)
as(date2, date)
date2 <- as.Date(activityImpute$date)
as(date2, date)
x<- as.Date(activityImpute$date)
date2 <- as.Date(activityImpute$date)
as(date2, date)
activityData <- read.csv("./data/activity.csv")
activityData$date <- as.Date(activityData$date)
str(ativityData)
str(activityData)
str(activityData)
activityData <- read.csv("./data/activity.csv")
str(activityData)
sumSteps <- activityData[!is.na(activityData$steps),] %>% group_by(date) %>% summarise(total = sum(steps))
hist(sumSteps$total, axes = TRUE, xlab = "Total steps", main = "Histogram of total number of steps each day")
meanSteps <- mean(sumSteps$total)
medSteps <- median(sumSteps$total)
!is.na(activityData$steps)
nrow(!is.na(activityData$steps))
length(!is.na(activityData$steps))
count(!is.na(activityData$steps))
sum(!is.na(activityData$steps))
sum(is.na(activityData$steps))
sum(is.na(activityData))
avgSteps <- activityData[!is.na(activityData$steps),] %>% group_by(interval) %>% summarise(average = mean(steps))
maxInterval<- avgSteps[avgSteps$average==max(avgSteps$average),]
totalMissing <- nrow(activityData[is.na(activityData$steps),])
totalMissing
sum(activityData[is.na(activityData$steps),])
nrow(activityData[is.na(activityData$steps),])
activityImpute <- activityData
na.steps <- which(is.na(activityImpute$steps))
na.interval <- activityImpute$interval[na.steps]
na.indices <- is.na(activityImpute$steps)
activityImpute$steps[na.indices] <- avgSteps$average[match(na.interval, avgSteps$interval)]
names(avgSteps)
head(avgSteps)
par(mfrow=c(1,2))
hist(sumSteps$total, 10, xlab = "Total steps", ylim=c(0,25),
main = "Total number of steps each day")
abline(v = median(sumSteps$total), col = 4, lwd = 4)
hist(sumStepsImpute$total, 10, xlab = "Total steps", ylim = c(0,25),
main = "Total number of steps each day
(Missing value imputed with average interval)")
abline(v = median(sumStepsImpute$total), col = 4, lwd = 4)
meanStepsImpute <- mean(sumStepsImpute$total)
medStepsImpute <- median(sumStepsImpute$total)
With NA |`r format(round(meanSteps, 2), nsmall = 2)`       |`r medSteps`
medStepsImpute
activityImpute$day <- weekdays(activityImpute$day)
activityImpute$day <- weekdays(activityImpute$date)
activityImpute <- activityData
str(activityImpute)
sttr(activityData)
str(activityData)
activityData$date <- as.Date(activityData$date)
str(activityData)
sumSteps <- activityData[!is.na(activityData$steps),] %>% group_by(date) %>% summarise(total = sum(steps))
str(activityData)
avgSteps <- activityData[!is.na(activityData$steps),] %>% group_by(interval) %>% summarise(average = mean(steps))
str(activityData)
activityImpute <- activityData
str(activityData)
str(activityImpute)
na.steps <- which(is.na(activityImpute$steps))
na.interval <- activityImpute$interval[na.steps]
na.indices <- is.na(activityImpute$steps)
activityImpute$steps[na.indices] <- avgSteps$average[match(na.interval, avgSteps$interval)]
str(activityData)
str(activityImpute)
activityImpute$day <- weekdays(activityImpute$date)
head(activityImpute$day)
activityImpute$wkDay <- weekdays(activityImpute$date)
activityImpute$wkDay.f <- as.factor(c("weekday", "weekend"))
head(activityImpute)
activityImpute[!(activityImpute$wkDay=="Saturday" | activityImpute$wkDay=="Sunday"),5] <- factor("weekday")
activityImpute[activityImpute$wkDay=="Saturday" | activityImpute$wkDay=="Sunday",5] <- factor("weekend")
head(activityImpute)
activityImpute$wkDay <- weekdays(activityImpute$date)
activityImpute[!(activityImpute$wkDay=="Saturday" | activityImpute$wkDay=="Sunday"),5] <- "weekday"
activityImpute[activityImpute$wkDay=="Saturday" | activityImpute$wkDay=="Sunday",5] <- "weekend"
head(activityImpute)
activityImpute$wkDay.f <- factor(activityImpute$wkDay)
head(activityImpute)
levels(activityImpute$wkDay.f)
activityImpute$day <- weekdays(activityImpute$date)
activityImpute$day.f[!(activityImpute$day=="Saturday" | activityImpute$day=="Sunday")] <- "weekday"
activityImpute$day.f[activityImpute$day=="Saturday" | activityImpute$day=="Sunday"] <- "weekend"
activityImpute$day.f[!(activityImpute$day=="Saturday" | activityImpute$day=="Sunday")] <- factor("weekday")
activityImpute$day.f[activityImpute$day=="Saturday" | activityImpute$day=="Sunday"] <- factor("weekend")
activityImpute$steps[na.indices] <- avgSteps$average[match(na.interval, avgSteps$interval)]
activityImpute <- activityData
activityImpute$steps[na.indices] <- avgSteps$average[match(na.interval, avgSteps$interval)]
activityImpute$day <- weekdays(activityImpute$date)
activityImpute$day.f[!(activityImpute$day=="Saturday" | activityImpute$day=="Sunday")] <- factor("weekday")
activityImpute$day.f[activityImpute$day=="Saturday" | activityImpute$day=="Sunday"] <- factor("weekend")
head(activityImpute)
activityImpute$day.f <- as.factor(c("weekday", "weekend"))
activityImpute$day.f[!(activityImpute$day=="Saturday" | activityImpute$day=="Sunday")] <- factor("weekday")
activityImpute$day.f[activityImpute$day=="Saturday" | activityImpute$day=="Sunday"] <- factor("weekend")
head(activityImpute)
avgWeekday <- activityImpute[activityImpute$day.f=="weekday"] %>% group_by(interval) %>% summarise(average = mean(steps))
head(activityImpute)
avgWeekday <- activityImpute[activityImpute$day.f=="weekday",] %>% group_by(interval) %>% summarise(average = mean(steps))
avgWeekend <- activityImpute[activityImpute$day.f=="weekend",] %>% group_by(interval) %>% summarise(average = mean(steps))
head(avgWeekday)
avgImpute <- activityImpute %>% group_by(day.f, interval) %>% summarise(average = mean(steps))
head(avgImpute)
tail(avgImpute)
nrow(avgImpute[avgImpute$day.f=="weekday",])
nrow(avgImpute[avgImpute$day.f=="weekend",])
p <- ggplot(avgImpute, aes(interval, average)) + geom_line() + xlab("Interval") + ylab("Number of steps")
library(ggplot2)
p <- ggplot(avgImpute, aes(interval, average)) + geom_line() + xlab("Interval") + ylab("Number of steps")
p + facet_wrap(~day.f)
par(mfrow=c(2,1))
p <- ggplot(avgImpute, aes(interval, average)) + geom_line() + xlab("Interval") + ylab("Number of steps")
p + facet_wrap(~day.f)
p <- ggplot(avgImpute, aes(interval, average)) + geom_line() + xlab("Interval") + ylab("Number of steps")
p + facet_wrap(~day.f, nrow = 2)
p <- ggplot(avgImpute, aes(x=interval, y=average, color=blues9)) + geom_line() + xlab("Interval") + ylab("Number of steps")
p + facet_wrap(~day.f, nrow = 2)
p <- ggplot(avgImpute, aes(x=interval, y=average, color=blue)) + geom_line() + xlab("Interval") + ylab("Number of steps")
p + facet_wrap(~day.f, nrow = 2)
p <- ggplot(avgImpute, aes(x=interval, y=average)) + geom_line() + xlab("Interval") + ylab("Number of steps")
p + facet_wrap(~day.f, nrow = 2)
p <- ggplot(avgImpute, aes(x=interval, y=average)) + geom_line() + xlab("Interval") + ylab("Number of steps")
p <- p + scale_color_manual(values="#CC6666") #c("#CC6666", "#9999CC"))
p + facet_wrap(~day.f, nrow = 2)
p <- ggplot(avgImpute, aes(x=interval, y=average, colour="#CC6666")) + geom_line() + xlab("Interval") + ylab("Number of steps")
p + facet_wrap(~day.f, nrow = 2)
p <- ggplot(avgImpute, aes(x=interval, y=average, colour="#9999CC")) + geom_line() + xlab("Interval") + ylab("Number of steps")
p + facet_wrap(~day.f, nrow = 2)
p <- ggplot(avgImpute, aes(x=interval, y=average, colour="#9999CC")) + geom_line() + xlab("Interval") + ylab("Number of steps")
p + facet_wrap(~day.f, nrow = 2)
library(ggplot2)
p <- ggplot(avgImpute, aes(x=interval, y=average, colour="#9999CC")) + geom_line() + xlab("Interval") + ylab("Number of steps")
p + facet_wrap(~day.f, nrow = 2)
p <- ggplot(avgImpute, aes(x=interval, y=average, colour="")) + geom_line() + xlab("Interval") + ylab("Number of steps")
p + facet_wrap(~day.f, nrow = 2)
p <- ggplot(avgImpute, aes(x=interval, y=average)) + geom_line() + xlab("Interval") + ylab("Number of steps")
p + facet_wrap(~day.f, nrow = 2)
